import java.io.*;
import java.util.*;

public class p1260 {
    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    StringTokenizer st;
    PrintWriter out = new PrintWriter(new BufferedOutputStream(System.out));
    StringBuilder sb = new StringBuilder("");

    // using value
    int n, m, v;
    int visit[];
    ArrayList<Integer> adj[];

    void start(){
        try{
            input();
            sovle();
            print();
        }catch (IOException e){
            e.printStackTrace();
        }
    }
    void input() throws IOException {
        st = new StringTokenizer(br.readLine());
        n = Integer.parseInt(st.nextToken());
        m = Integer.parseInt(st.nextToken());
        v = Integer.parseInt(st.nextToken());

        adj = new ArrayList[n+1];
        visit = new int[n+1];

        for (int i = 1; i < n+1; i++) {
            adj[i] = new ArrayList();
        }

        for (int i = 0; i < m; i++) {
            st = new StringTokenizer(br.readLine());
            int a = Integer.parseInt(st.nextToken());
            int b = Integer.parseInt(st.nextToken());
            adj[a].add(b);
            adj[b].add(a);
        }

        for (int i = 1; i < n+1; i++) {
            Collections.sort(adj[i]);
        }
    }
    void dfs(int x){
        if(visit[x]==1){
            return;
        }
        visit[x] = 1;
        sb.append(x+" ");
        for (int i : adj[x]) {
            if(visit[i] == 0){
                dfs(i);
            }
        }
    }
    void bfs(int x){
        Queue<Integer> q = new LinkedList<Integer>();
        q.add(x);
        visit[x] = 1;
        int temp;
        while(!q.isEmpty()){
            temp = q.remove();
            sb.append(temp+" ");
            for(int i : adj[temp]){
                if(visit[i] == 0){
                    q.add(i);
                    visit[i] = 1;
                }
            }
        }
    }
    void sovle() {
        dfs(v);
        visit = new int[n+1];
        sb.append("\n");
        bfs(v);

    }
    void print(){
        out.write(sb.toString());
        out.close();
    }
    public static void main(String[] args) {
        new p1260().start();
    }
}
